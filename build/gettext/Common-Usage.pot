# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the node-config docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: node-config docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-06-28 22:19+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/Common-Usage.rst:2
msgid "Common Usage"
msgstr ""

#: ../../source/Common-Usage.rst:5
msgid "Create Configuration files"
msgstr ""

#: ../../source/Common-Usage.rst:7
msgid "Create your :doc:`Configuration-Files`."
msgstr ""

#: ../../source/Common-Usage.rst:10
msgid "Loading Node-Config"
msgstr ""

#: ../../source/Common-Usage.rst:12
msgid "Place this at the top of your javascript file:"
msgstr ""

#: ../../source/Common-Usage.rst:18
msgid "Or load a specific configuration context:"
msgstr ""

#: ../../source/Common-Usage.rst:25
msgid "Using Config Values"
msgstr ""

#: ../../source/Common-Usage.rst:27
msgid "The preferred method of accessing configurations is through ``get()``:"
msgstr ""

#: ../../source/Common-Usage.rst:33
msgid "This gives you a fail-fast system if (when?) someone screws up your configuration files - it’s more common than you’d think. It will also make the configuration object immutable during the first call to ``get()``."
msgstr ""

#: ../../source/Common-Usage.rst:38
msgid "If a configuration file does not contain a value for a given property, ``get()`` will throw an exception. Note that ``null`` is an *acceptable* value, and will not throw an exception when it would be returned by ``get()``. Get will also throw an exception if the parameter passed in to get is ``null`` or ``undefined``."
msgstr ""

#: ../../source/Common-Usage.rst:44
msgid "Additionally, setting config values explicitly to ``undefined`` is a helpful way to ensure that they must be defined by a later configuration file."
msgstr ""

#: ../../source/Common-Usage.rst:48
msgid "The alternative is to attain the value directly:"
msgstr ""

#: ../../source/Common-Usage.rst:54
msgid "This doesn’t give you protection from typos and configuration file problems, or immutability. But it is supported for backward compatibility."
msgstr ""

#: ../../source/Common-Usage.rst:59
msgid "Testing for config values"
msgstr ""

#: ../../source/Common-Usage.rst:61
msgid "If you want to see if a config value exists, use the ``has()`` method"
msgstr ""

#: ../../source/Common-Usage.rst:69
msgid "This can be done as an alternative to wrapping your ``get()`` around a try/catch block. ``has()`` will not throw exceptions, and will return true if and only if the configuration file has a defined value for the provided key. Note that ``null`` is a defined value."
msgstr ""

#: ../../source/Common-Usage.rst:74
msgid "``has()`` will not throw an exception if the parameter passed is ``null`` or ``undefined`` but will simply return ``false``."
msgstr ""

